{"ast":null,"code":"var _jsxFileName = \"/Users/karladelacruz/React/react-blog/src/Create.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { storage } from \"./firebase\";\nimport { ref, uploadBytes, listAll, getDownloadURL } from \"firebase/storage\";\nimport { v4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [imageUpload, setImageUpload] = useState(null);\n  const [imageList, setImageList] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [ingredient, setIngredient] = useState(\"\");\n  const [directions, setDirections] = useState(\"\");\n  const imageListRef = ref(storage, \"image/\");\n  const uploadImage = () => {\n    if (imageUpload == null) return;\n    const imageRef = ref(storage, `image/${imageUpload.name + v4()}`);\n    uploadBytes(imageRef, imageUpload).then(snapshot => {\n      getDownloadURL(snapshot.ref).then(url => {\n        //setImageList((prev) => [...prev, url])\n        const recipe = {\n          url,\n          title,\n          time,\n          description,\n          ingredient,\n          directions\n        };\n        fetch('http://localhost:8000/recipes', {\n          method: 'POST',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(recipe)\n        });\n        window.location = '/';\n      });\n    });\n  };\n  function submit() {\n    uploadImage();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: event => {\n        setImageUpload(event.target.files[0]);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Recipe Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: time,\n      onChange: e => setTime(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: ingredient,\n      onChange: e => setIngredient(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Directions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: directions,\n      onChange: e => setDirections(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bxYiAIbUPnBj9p0zUGqJXVN3zsE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","storage","ref","uploadBytes","listAll","getDownloadURL","v4","App","imageUpload","setImageUpload","imageList","setImageList","title","setTitle","time","setTime","description","setDescription","ingredient","setIngredient","directions","setDirections","imageListRef","uploadImage","imageRef","name","then","snapshot","url","recipe","fetch","method","headers","body","JSON","stringify","window","location","submit","event","target","files","e","value"],"sources":["/Users/karladelacruz/React/react-blog/src/Create.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { storage } from \"./firebase\";\nimport { ref, uploadBytes, listAll, getDownloadURL } from \"firebase/storage\";\nimport { v4 } from 'uuid';\n\n\n\nfunction App() {\n  const [imageUpload, setImageUpload] = useState(null);\n  const [imageList, setImageList] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [ingredient, setIngredient] = useState(\"\");\n  const [directions, setDirections] = useState(\"\");\n  \n  \n\n\n  const imageListRef = ref(storage, \"image/\");\n  \n  const uploadImage = () => {\n    if (imageUpload == null) return;\n    const imageRef = ref(storage, `image/${imageUpload.name + v4()}`);\n    uploadBytes(imageRef, imageUpload).then((snapshot) => {\n      getDownloadURL(snapshot.ref).then((url) =>{\n        //setImageList((prev) => [...prev, url])\n        const recipe = { url, title, time, description, ingredient, directions};\n        fetch('http://localhost:8000/recipes', {\n            method: 'POST',\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(recipe)\n        })\n        window.location = '/';\n      })\n    })\n  };\n\n \n\n\n  \n  \n  function submit(){\n    uploadImage();\n   \n\n  }\n\n\n  return (\n    <div className=\"create\">\n      <input \n        type=\"file\" \n        onChange={(event) => {setImageUpload(event.target.files[0])}}\n      />\n      <label>Recipe Title</label>\n      <input \n        type=\"text\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n      />\n      <label>Time</label>\n      <input \n        type=\"number\"\n        value={time}\n        onChange={(e) => setTime(e.target.value)}\n      />\n      <label>Description</label>\n      <textarea \n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n      />\n     <label>Ingredients</label>\n      <input \n        type=\"text\"\n        value={ingredient}\n        onChange={(e) => setIngredient(e.target.value)}\n      />\n      <label>Directions</label>\n      <input \n        type=\"text\"\n        value={directions}\n        onChange={(e) => setDirections(e.target.value)}\n      />\n\n      \n      <button onClick={submit}>Upload Image</button>\n        \n      \n      \n    </div>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}