{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState([]);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch(url, {\n        signal: abortCont.signal\n      }).then(res => {\n        if (!res.ok) {\n          throw Error('Could not fetch data for that resource');\n        }\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setIsPending(false);\n        setError(null);\n      }).catch(err => {\n        if (err.name === 'AbortError') {\n          console.log('Fetch aborted');\n        } else {\n          setError(err.message);\n          setIsPending(false);\n        }\n      });\n    }, 5);\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s(useFetch, \"kbGVbgObkPRWJGb0cHAEJjKTGv4=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"sources":["/Users/karladelacruz/React/recipe-blog/recipe-blog/src/useFetch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n    const [data, setData] = useState([]);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const abortCont = new AbortController();\n\n        setTimeout(() => {\n            fetch(url, { signal: abortCont.signal })\n            .then(res => {\n                if(!res.ok)\n                {\n                    throw Error('Could not fetch data for that resource');\n                }\n                return res.json();\n            })\n            .then((data) => {\n                setData(data);\n                setIsPending(false);\n                setError(null);\n            })\n            .catch((err) => {\n                if(err.name==='AbortError') {\n                    console.log('Fetch aborted');\n                }\n                else {\n                    setError(err.message);\n                    setIsPending(false);\n                }\n            })\n        }, 5);\n\n        return () => abortCont.abort();\n    },[url]);\n\n    return {data, isPending, error};\n}\n\nexport default useFetch;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMS,SAAS,GAAG,IAAIC,eAAe,EAAE;IAEvCC,UAAU,CAAC,MAAM;MACbC,KAAK,CAACV,GAAG,EAAE;QAAEW,MAAM,EAAEJ,SAAS,CAACI;MAAO,CAAC,CAAC,CACvCC,IAAI,CAACC,GAAG,IAAI;QACT,IAAG,CAACA,GAAG,CAACC,EAAE,EACV;UACI,MAAMC,KAAK,CAAC,wCAAwC,CAAC;QACzD;QACA,OAAOF,GAAG,CAACG,IAAI,EAAE;MACrB,CAAC,CAAC,CACDJ,IAAI,CAAEX,IAAI,IAAK;QACZC,OAAO,CAACD,IAAI,CAAC;QACbG,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAAC,IAAI,CAAC;MAClB,CAAC,CAAC,CACDW,KAAK,CAAEC,GAAG,IAAK;QACZ,IAAGA,GAAG,CAACC,IAAI,KAAG,YAAY,EAAE;UACxBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAChC,CAAC,MACI;UACDf,QAAQ,CAACY,GAAG,CAACI,OAAO,CAAC;UACrBlB,YAAY,CAAC,KAAK,CAAC;QACvB;MACJ,CAAC,CAAC;IACN,CAAC,EAAE,CAAC,CAAC;IAEL,OAAO,MAAMG,SAAS,CAACgB,KAAK,EAAE;EAClC,CAAC,EAAC,CAACvB,GAAG,CAAC,CAAC;EAER,OAAO;IAACC,IAAI;IAAEE,SAAS;IAAEE;EAAK,CAAC;AACnC,CAAC;AAAA,GArCKN,QAAQ;AAuCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}