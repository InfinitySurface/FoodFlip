{"ast":null,"code":"var _jsxFileName = \"/Users/karladelacruz/React/react-blog/src/Create.js\",\n  _s = $RefreshSig$();\n/*import { useState, useEffect } from \"react\";\nimport { storage } from \"./firebase\";\nimport { ref, uploadBytes, listAll, getDownloadURL } from \"firebase/storage\";\nimport { v4 } from 'uuid';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction App() {\n  const [imageUpload, setImageUpload] = useState(null);\n  // eslint-disable-next-line \n  const [imageList, setImageList] = useState([]);\n  const [image, setImage] = useState('');\n\n  \n  const [title, setTitle] = useState('');\n  //const [username, setUsername] = useState('');\n  const [time, setTime] = useState('');\n  const [description, setDescription] = useState('');\n  const [ingredient, setIngredient] = useState('');\n  const [directions, setDirections] = useState('');\n  \n\n\n  const [isPending, setIsPending] = useState(false);\n  const history = useNavigate();\n  \n\n\n\n  const imageListRef = ref(storage, \"image/\");\n  \n  const uploadImage = () => {\n    if (imageUpload == null) return;\n    const imageRef = ref(storage, `image/${imageUpload.name + v4()}`);\n    uploadBytes(imageRef, imageUpload).then((snapshot) => {\n      getDownloadURL(snapshot.ref).then((url) =>{\n        setImageList((prev) => [...prev, url])\n        console.log(url)\n        const recipe = { url, title, time, description, ingredient, directions };\n        fetch('http://localhost:8000/images', {\n            method: 'POST',\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(recipe)\n        })\n        window.location = '/';\n      })\n    })\n  };\n\n  useEffect(() => {\n    listAll(imageListRef).then((response) =>{\n      response.items.forEach((item) => {\n        getDownloadURL(item).then((url) =>{\n          setImageList((prev) => [...prev, url])\n        });\n      });\n    });\n  // eslint-disable-next-line\n  }, []);\n\n\n  \n  \n  function submit(){\n    uploadImage();\n   \n\n  }\n\n\n  return (\n    <div className=\"create\">\n        <h2>Add a New Recipe</h2>\n        <label>Add Image</label>\n\n        <input \n            type=\"file\" \n            onChange={(event) => {setImageUpload(event.target.files[0])}}\n        />\n        <label>Recipe Title</label>\n        <input \n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n        />\n        <label>Time</label>\n        <input\n            type=\"number\"\n            \n            value={time}\n            onChange={(e) => setTime(e.target.value)}\n        />\n        <label>Description</label>\n        <textarea\n        \n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n        />\n        <label>Ingredients</label>\n        <input\n            type=\"text\"\n    \n            value={ingredient}\n            onChange={(e) => setIngredient(e.target.value)}\n        />\n        <label>Directions</label>\n        <input\n            type=\"text\"\n        \n            value={directions}\n            onChange={(e) => setDirections(e.target.value)}\n        />\n\n\n        <button onClick={submit}>Add Recipe</button>\n        \n      \n      \n    </div>\n\n  );\n}\n\nexport default App;\n*/\n\nimport { useState, useEffect } from \"react\";\nimport { storage } from \"./firebase\";\nimport { ref, uploadBytes, listAll, getDownloadURL } from \"firebase/storage\";\nimport { v4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [imageUpload, setImageUpload] = useState(null);\n  const [imageList, setImageList] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [ingredient, setIngredient] = useState(\"\");\n  const [directions, setDirections] = useState(\"\");\n  const imageListRef = ref(storage, \"image/\");\n  const uploadImage = () => {\n    if (imageUpload == null) return;\n    const imageRef = ref(storage, `image/${imageUpload.name + v4()}`);\n    uploadBytes(imageRef, imageUpload).then(snapshot => {\n      getDownloadURL(snapshot.ref).then(url => {\n        setImageList(prev => [...prev, url]);\n        console.log(url);\n        const imageURL = {\n          url,\n          title,\n          time,\n          description,\n          ingredient,\n          directions\n        };\n        fetch('http://localhost:8000/images', {\n          method: 'POST',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(imageURL)\n        });\n        window.location = '/';\n      });\n    });\n  };\n  useEffect(() => {\n    listAll(imageListRef).then(response => {\n      response.items.forEach(item => {\n        getDownloadURL(item).then(url => {\n          setImageList(prev => [...prev, url]);\n        });\n      });\n    });\n    // eslint-disable-next-line\n  }, []);\n  function submit() {\n    uploadImage();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: event => {\n        setImageUpload(event.target.files[0]);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Recipe Title \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: time,\n      onChange: e => setTime(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: ingredient,\n      onChange: e => setIngredient(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Directions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: directions,\n      onChange: e => setDirections(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TGaWh8KU2BrLjhGln4QKfu5OdYA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","storage","ref","uploadBytes","listAll","getDownloadURL","v4","App","imageUpload","setImageUpload","imageList","setImageList","title","setTitle","time","setTime","description","setDescription","ingredient","setIngredient","directions","setDirections","imageListRef","uploadImage","imageRef","name","then","snapshot","url","prev","console","log","imageURL","fetch","method","headers","body","JSON","stringify","window","location","response","items","forEach","item","submit","event","target","files","e","value"],"sources":["/Users/karladelacruz/React/react-blog/src/Create.js"],"sourcesContent":["/*import { useState, useEffect } from \"react\";\nimport { storage } from \"./firebase\";\nimport { ref, uploadBytes, listAll, getDownloadURL } from \"firebase/storage\";\nimport { v4 } from 'uuid';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction App() {\n  const [imageUpload, setImageUpload] = useState(null);\n  // eslint-disable-next-line \n  const [imageList, setImageList] = useState([]);\n  const [image, setImage] = useState('');\n\n  \n  const [title, setTitle] = useState('');\n  //const [username, setUsername] = useState('');\n  const [time, setTime] = useState('');\n  const [description, setDescription] = useState('');\n  const [ingredient, setIngredient] = useState('');\n  const [directions, setDirections] = useState('');\n  \n\n\n  const [isPending, setIsPending] = useState(false);\n  const history = useNavigate();\n  \n\n\n\n  const imageListRef = ref(storage, \"image/\");\n  \n  const uploadImage = () => {\n    if (imageUpload == null) return;\n    const imageRef = ref(storage, `image/${imageUpload.name + v4()}`);\n    uploadBytes(imageRef, imageUpload).then((snapshot) => {\n      getDownloadURL(snapshot.ref).then((url) =>{\n        setImageList((prev) => [...prev, url])\n        console.log(url)\n        const recipe = { url, title, time, description, ingredient, directions };\n        fetch('http://localhost:8000/images', {\n            method: 'POST',\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(recipe)\n        })\n        window.location = '/';\n      })\n    })\n  };\n\n  useEffect(() => {\n    listAll(imageListRef).then((response) =>{\n      response.items.forEach((item) => {\n        getDownloadURL(item).then((url) =>{\n          setImageList((prev) => [...prev, url])\n        });\n      });\n    });\n  // eslint-disable-next-line\n  }, []);\n\n\n  \n  \n  function submit(){\n    uploadImage();\n   \n\n  }\n\n\n  return (\n    <div className=\"create\">\n        <h2>Add a New Recipe</h2>\n        <label>Add Image</label>\n\n        <input \n            type=\"file\" \n            onChange={(event) => {setImageUpload(event.target.files[0])}}\n        />\n        <label>Recipe Title</label>\n        <input \n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n        />\n        <label>Time</label>\n        <input\n            type=\"number\"\n            \n            value={time}\n            onChange={(e) => setTime(e.target.value)}\n        />\n        <label>Description</label>\n        <textarea\n        \n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n        />\n        <label>Ingredients</label>\n        <input\n            type=\"text\"\n    \n            value={ingredient}\n            onChange={(e) => setIngredient(e.target.value)}\n        />\n        <label>Directions</label>\n        <input\n            type=\"text\"\n        \n            value={directions}\n            onChange={(e) => setDirections(e.target.value)}\n        />\n\n\n        <button onClick={submit}>Add Recipe</button>\n        \n      \n      \n    </div>\n\n  );\n}\n\nexport default App;\n*/\n\n\n\n\nimport { useState, useEffect } from \"react\";\nimport { storage } from \"./firebase\";\nimport { ref, uploadBytes, listAll, getDownloadURL } from \"firebase/storage\";\nimport { v4 } from 'uuid';\n\n\n\nfunction App() {\n  const [imageUpload, setImageUpload] = useState(null);\n  const [imageList, setImageList] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [ingredient, setIngredient] = useState(\"\");\n  const [directions, setDirections] = useState(\"\");\n  \n\n\n\n  const imageListRef = ref(storage, \"image/\");\n  \n  const uploadImage = () => {\n    if (imageUpload == null) return;\n    const imageRef = ref(storage, `image/${imageUpload.name + v4()}`);\n    uploadBytes(imageRef, imageUpload).then((snapshot) => {\n      getDownloadURL(snapshot.ref).then((url) =>{\n        setImageList((prev) => [...prev, url])\n        console.log(url)\n        const imageURL = { url, title, time, description, ingredient, directions};\n        fetch('http://localhost:8000/images', {\n            method: 'POST',\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(imageURL)\n        })\n        window.location = '/';\n      })\n    })\n  };\n\n  useEffect(() => {\n    listAll(imageListRef).then((response) =>{\n      response.items.forEach((item) => {\n        getDownloadURL(item).then((url) =>{\n          setImageList((prev) => [...prev, url])\n        });\n      });\n    });\n  // eslint-disable-next-line\n  }, []);\n\n\n  \n  \n  function submit(){\n    uploadImage();\n   \n\n  }\n\n\n  return (\n    <div className=\"create\">\n        <input \n            type=\"file\" \n            onChange={(event) => {setImageUpload(event.target.files[0])}}\n        />\n        <label>Recipe Title </label>\n        <input \n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n        />\n        <label>Time</label>\n        <input\n            type=\"number\"\n            value={time}\n            onChange={(e) => setTime(e.target.value)}\n        />\n        <label>Description</label>\n        <textarea\n        \n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n        />\n        <label>Ingredients</label>\n        <input\n            type=\"text\"\n    \n            value={ingredient}\n            onChange={(e) => setIngredient(e.target.value)}\n        />\n        <label>Directions</label>\n        <input\n            type=\"text\"\n        \n            value={directions}\n            onChange={(e) => setDirections(e.target.value)}\n        />\n\n      \n      <button onClick={submit}>Upload Image</button>\n        \n      \n      \n    </div>\n\n  );\n}\n\nexport default App;\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}